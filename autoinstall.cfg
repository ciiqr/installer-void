#!/bin/sh
# Void Linux Automatic Install Configuration

# ===
# Disk Configuration
# ===
# disk: the disk to install to
# default: the first disk that isn't the installer
#disk=/dev/hda

# bootpartitionsize: controls how large the boot partition will be
# default: 500M
bootpartitionsize=500M

# swapsize: how large should the swap partition be
# default: equal to the installed physical memory
#swapsize=

# ===
# XBPS Configuration
# ===
# xbpsrepository: which repo should the install pull from
# default: https://alpha.de.repo.voidlinux.org/current
#xbpsrepository="https://alpha.de.repo.voidlinux.org/current"

# TODO: curl?
# pkgs: additional packages to install into the target
# default: none
#pkgs=""

# ===
# Default User
# ===
# username: the username of the user to be created
# default: voidlinux
username="william"

# password: password to set for the new user
# default: unset (will prompt during install)
# Warning: This does not work in musl!
#password=""

# ===
# Misc. Options
# ===
# timezone: Timezone in TZ format
# default: America/Chicago
timezone="America/Toronto"

# keymap: Keymap to use by default
# default: us
keymap="us"

# locale: initial glibc locale
# default: en_US.UTF-8
libclocale=en_CA.UTF-8

# hostname: static hostname for the system
# default: derived from DNS
#hostname=VoidLinux

# end_action: what to do at the end of the install
# default: shutdown
# alternate values: reboot, script, func
end_action=func

# end_function: a function to optionally be run at
# the end of the install.
end_function() {
    # TODO: /run/initramfs/live/boot/data/

    # TODO: install things...
    # # move over config
    # data_path="/cdrom/data/config/."
    # cp -rf "$data_path" "/target/config"

    # # move over config-private
    # data_path="/cdrom/data/config-private/."
    # cp -rf "$data_path" "/target/config-private"

    # # install config
    # in-target bash /config/scripts/install --primaryUser "$primaryUser" --machine "$machine" --roles "$roles"

    # reboot
    sync
    umount -R "${target}"
    reboot -f
}
